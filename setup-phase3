#!/bin/sh

if [ "$(id -u)" -eq 0 ]; then
    echo >&2 "Error: $0 is intended to be run as a user with sudo access"
    exit 1
fi
scriptdir="$(cd "$(dirname "$0")" && pwd)"

makepkg () {
    command makepkg --noconfirm --needed "$@"
}

pacman () {
    command sudo pacman --noconfirm --needed "$@"
}

install_aur () {
    pkg="$1"
    shift
    if [ $# -gt 0 ]; then
        pacman -Sya "$@"
    fi
    prefix="$(echo "$pkg" | sed 's,\(..\).*,\1,')"
    curl -L https://aur.archlinux.org/packages/$prefix/$pkg/$pkg.tar.gz | tar -zxvf -
    cd "$pkg"
    makepkg -sci
    cd - >/dev/null
}

sudo sed -i -e '/^OPTIONS=/{ s/!*libtool/libtool/; s/libtool/!libtool/; }' /etc/makepkg.conf
CPUS=$(grep -c processor /proc/cpuinfo)
JOBS=$(expr $CPUS \* 3 / 2)
sudo sed -i -e "s,#*MAKEFLAGS=.*,MAKEFLAGS=\"-j$JOBS\"," /etc/makepkg.conf

# Ensure we can build 32 bit binaries
yes | pacman -S binutils-multilib gcc-libs-multilib gcc-multilib

pacman -S nss-mdns avahi pkgfile git mercurial

sudo pkgfile -u

sudo sed -i -e '/hosts:/{ s/mdns_minimal //g; s/dns/mdns_minimal dns/; }' /etc/nsswitch.conf
sudo systemctl enable avahi-daemon.service
sudo systemctl start avahi-daemon.service || true

pacman -S vim tmux subversion python2 python2-pip

# Clean up
pacman -R ppp nano pcmciautils

# GUI bits
sudo ln -sf . /usr/bin/X11

pacman -S xorg-xrdb xorg-xauth xorg-server xorg-xinit slim xorg-xset autocutsel
pacman -S rxvt-unicode
sudo systemctl enable slim.service

cat >X20-local-fonts.conf <<END
Section "Files"
    FontPath     "/usr/share/fonts/local/"
EndSection
END
sudo mv X20-local-fonts.conf /etc/X11/xorg.conf.d/


mkdir -p ~/Build
cd ~/Build

curl -L http://github.com/kergoth/aur-dropbear/archive/master.tar.gz | tar -zxf -
cd aur-dropbear-master
makepkg -sci
cd - >/dev/null
sudo systemctl enable dropbear.service

install_aur cower
install_aur urxvtcd

mkdir -p meat
cd meat
curl -O https://raw.githubusercontent.com/e36freak/meat/master/PKGBUILD
makepkg -sci
cd - >/dev/null

# If vmware
if grep -q vmci /proc/misc; then
    pacman -S xf86-input-vmmouse xf86-video-vmware
    pacman -S open-vm-tools
    install_aur open-vm-tools-dkms
    sudo systemctl enable vmtoolsd.service
    sudo systemctl start vmtoolsd.service || true
    sudo sh -c "sed -i -e '/^MODULES/s/\"$/vmwgfx \"/' /etc/mkinitcpio.conf"
    if grep vmwgfx /etc/mkinitcpio.conf; then
        sudo mkinitcpio -p linux
    fi
    sudo sh -c "echo vmhgfs >/etc/modules-load.d/vmware.conf"
    sudo cp $scriptdir/mnt-hgfs.mount $scriptdir/mnt-hgfs.automount /etc/systemd/system/
    sudo systemctl enable mnt-hgfs.automount
fi
