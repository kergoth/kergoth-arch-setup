#!/bin/sh


usage() {
    echo >&2 "${0##*/} [options] HOSTNAME"
    echo >&2
    echo >&2 "Options:"
    echo >&2
    echo >&2 "  -u USERS    Users to add or configure. Space-separated."
    echo >&2 "  -b BOOTLOADER    Bootloader to install (grub or syslinux). Default: grub."
    exit 2
}

users=
bootloader=grub
while getopts u:b:h opt; do
    case "$opt" in
        u)
            users="$users $OPTARG"
            ;;
        b)
            case "$OPTARG" in
                syslinux|grub)
                    bootloader="$OPTARG"
                    ;;
                *)
                    echo >&2 "Error: -b $OPTARG is unsupported. Only grub or syslinux are supported by this script."
                    exit 1
                    ;;
            esac
            ;;
        \? | h)
            usage
            ;;
    esac
done
shift $((OPTIND - 1))

if [ $# -eq 0 ]; then
    usage
fi

hostname=$1
shift

if [ "$OSTYPE" = "linux-gnu" ]; then
    case "$(uname -r)" in
        *Microsoft|*microsoft*)
            # For convenience
            OSTYPE=WSL
            ;;
    esac
fi

locale="en_US.UTF-8"
timezone="America/Phoenix"
initcpio_modules="crc32c"
initcpio_extra_hooks=
font="terminus-font ter-220n"

alias pacman="pacman --noconfirm --needed"
pacman -Sy

# Hostname
if [ -n "$hostname" ] && [ "$OSTYPE" != WSL ]; then
    echo $hostname >/etc/hostname
    sed -i -e "s,\tlocalhost,\t$hostname localhost," /etc/hosts
fi

# Timezone
ln -sf /usr/share/zoneinfo/$timezone /etc/localtime
hwclock --systohc

# Locales
sed -i -e "/^#$locale /s/^#//" /etc/locale.gen
locale-gen
echo "LANG=$locale" >/etc/locale.conf

if [ "$OSTYPE" != WSL ]; then
    root_fs="$(sed -n -e '/[         ]\/[    ]/p' /proc/mounts | awk '{print $3}')"
    root_dev="$(sed -n -e '/[         ]\/[    ]/p' /proc/mounts | awk '{print $1}')"

    # Initramfs
    if [ "$root_fs" = "btrfs" ]; then
        pacman -S btrfs-progs
        initcpio_extra_hooks="$initcpio_extra_hooks btrfs"
    fi
    sed -i -e"s,^MODULES=\"\",MODULES=\"$initcpio_modules\"," /etc/mkinitcpio.conf
    if [ -n "$initcpio_extra_hooks" ]; then
        sed -i -e"s,^HOOKS=\"\(.*\)\",HOOKS=\"\1 $initcpio_extra_hooks\"," /etc/mkinitcpio.conf
    fi
    mkinitcpio -p linux
    
    # Console font
    if [ -n "$font" ]; then
        package=$(echo $font|cut -d" " -f1)
        fontname=$(echo $font|cut -d" " -f2)
        pacman -S $package
        echo "FONT=$fontname" >/etc/vconsole.conf
    fi
fi

pacman -S vim net-tools dhcpcd openssh

systemctl enable dhcpcd
systemctl enable sshd

# User setup
groupadd -r -g 51 staff
chgrp -R staff /usr/local
chmod -R g+rwX /usr/local
find /usr/local -type d -exec chmod g+s "{}" \;

pacman -S zsh
if [ "$OSTYPE" != WSL ]; then
    echo >&2 "Input password for root"
    passwd root

    case "$bootloader" in
        syslinux)
            syslinux-install_update -i -a -m
            ;;
        grub)
            grub-mkconfig -o /boot/grub/grub.cfg
            grub-install "$(echo $root_dev | sed 's,[0-9]*$,,')"
            ;;
    esac

    pacman -S sudo
    sed -i -e '/# %wheel.*) ALL$/s/^# *//' /etc/sudoers

    for user in $users; do
        useradd -m -g users -G staff,wheel,uucp,storage -s /bin/zsh "$user"
        echo >&2 "Input password for $user"
        passwd "$user"
    done
else
    for user in $users; do
        usermod -G power,storage,wheel,staff "$user"
        chsh -s /bin/zsh "$user"
    done
fi
